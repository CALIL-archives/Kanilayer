// Generated by CoffeeScript 1.9.3
var Kanilayer,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Kanilayer = (function(superClass) {
  extend(Kanilayer, superClass);

  Kanilayer.prototype.tileA = null;

  Kanilayer.prototype.tileB = null;

  Kanilayer.prototype.vector = null;

  function Kanilayer(options) {
    var id, merge, options_, tileA, xid;
    options_ = {
      minResolution: 0.0001,
      maxResolution: 100,
      kFloor: null
    };
    merge = function(obj1, obj2) {
      var attr, results;
      if (!obj2) {
        obj2 = {};
      }
      results = [];
      for (attr in obj2) {
        if (obj2.hasOwnProperty(attr)) {
          results.push(obj1[attr] = obj2[attr]);
        } else {
          results.push(void 0);
        }
      }
      return results;
    };
    merge(options_, options);
    id = options_.kFloor;
    xid = ("0000000000" + parseInt(id)).slice(-10);
    tileA = new ol.layer.Tile({
      source: new ol.source.XYZ({
        url: "https://tiles.haika.io/" + xid + "/{z}/{x}/{y}.png",
        maxZoom: 24
      }),
      opacity: 1,
      preload: 3
    });
    options_.layers = [tileA];
    Kanilayer.__super__.constructor.call(this, options_);
  }

  Kanilayer.prototype.setFloorId = function(newId, animation) {
    if (animation == null) {
      animation = True;
    }
  };

  return Kanilayer;

})(ol.layer.Group);

//# sourceMappingURL=kanilayer.js.map
